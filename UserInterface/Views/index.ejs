<!DOCTYPE html>
<html lang="en">

<%- include('./partials/head') %>
<body>

<%- include('./partials/sidebar') %>
<%- include('./partials/header') %>

<div class="content-wrap">
    <div class="main">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-8 p-r-0 title-margin-right">
                    <div class="page-header">
                        <div class="page-title">
                            <h1>Hello, <span>Welcome Here</span></h1>
                        </div>
                    </div>
                </div>
                <!-- /# column -->
                <div class="col-lg-4 p-l-0 title-margin-left">
                    <div class="page-header">
                        <div class="page-title">
                        </div>
                    </div>
                </div>
                <!-- /# column -->
            </div>
            <!-- /# row -->
            <section id="main-content">

                <!-- /# row -->
                <div class="row">
                    <div class="col-lg-5 col-md-5 col-sm12">
                        <div class="row">
                            <div class="col-12">

                                <div class="card alert">
                                    <div class="card-title">
                                        <h4><i class="fa fa-area-chart"></i>Device Information</h4>
                                    </div>
                                    <div class="device_information">
                                        <table class="table">
                                            <tbody>
                                            <tr>
                                                <td>
                                                    <% if(DeviceInfo.DeviceTypeString == 'Cloud'){ %>
                                                        <i class="fa-solid fa-cloud"></i>
                                                    <% } else{ %>
                                                        <i class="fa-brands fa-raspberry-pi"></i>

                                                    <% } %>
                                                </td>
                                                <td>Device Type</td>
                                                <td><%= DeviceInfo.DeviceTypeString %></td>
                                            </tr>
                                            <tr>
                                                <td><i class="fa-solid fa-globe"></i></td>
                                                <td>Global IP</td>
                                                <td><%= DeviceInfo.PublicIP %></td>
                                            </tr>
                                            <tr>
                                                <td><i class="fa-solid fa-network-wired"></i></td>
                                                <td>Local IP</td>
                                                <td><%= DeviceInfo.LocalIP %></td>
                                            </tr>
                                            <tr>
                                                <td><i class="fa-solid fa-globe-africa"></i></td>
                                                <td>Continent</td>
                                                <td><%= DeviceInfo.Continent %></td>
                                            </tr>
                                            <tr>
                                                <td><i class="fa-solid fa-flag"></i></td>
                                                <td>Country</td>
                                                <td><%= DeviceInfo.Country %></td>
                                            </tr>
                                            <tr>
                                                <td><i class="fa-solid fa-city"></i></td>
                                                <td>City</td>
                                                <td><%= DeviceInfo.City %></td>
                                            </tr>
                                            <tr>
                                                <td><i class="fa-solid fa-clock"></i></td>
                                                <td>Timezone</td>
                                                <td><%= DeviceInfo.Timezone %></td>
                                            </tr>
                                            <tr>
                                                <td><i class="fa-solid fa-map-location-dot"></i></td>
                                                <td>Location</td>
                                                <td><%= DeviceInfo.Location.join(', ') %></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <% if(DeviceInfo.SystemInformation.OperatingSystem.Platform == 'darwin'){ %>
                                                        <i class="fa-brands fa-apple"></i>
                                                    <% } else if(DeviceInfo.SystemInformation.OperatingSystem.Platform == 'win32'){ %>
                                                        <i class="fa-brands fa-windows"></i>
                                                    <% } else{ %>
                                                        <i class="fa-brands fa-linux"></i>
                                                    <% } %>
                                                </td>
                                                <td>Operating System</td>
                                                <td><%= DeviceInfo.SystemInformation.OperatingSystem.Type + ' / ' +
                                                    DeviceInfo.SystemInformation.OperatingSystem.Platform + ' / ' +
                                                    DeviceInfo.SystemInformation.OperatingSystem.Release %></td>
                                            </tr>
                                            <tr>
                                                <td><i class="fa-solid fa-microchip"></i></td>
                                                <td>CPUs</td>
                                                <td><%- DeviceInfo.SystemInformation.CPUs.string %></td>
                                            </tr>
                                            <tr>
                                                <td><i class="fa-solid fa-memory"></i></td>
                                                <td>Memory</td>
                                                <td><%= (DeviceInfo.SystemInformation.Memory / Math.pow(2, 30)).toFixed(2) %>
                                                    GB
                                                </td>
                                            </tr>
                                            <tr>
                                                <td><i class="fa-solid fa-hard-drive"></i></td>
                                                <td>Hard Drive</td>
                                                <td><%- DeviceInfo.SystemInformation.Disk.diskString %></td>
                                            </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="card alert">
                                    <div class="card-title">
                                        <h4><i class="fa fa-area-chart"></i> Request / Response</h4>
                                    </div>
                                    <div class="request_response-chart">
                                        <!--                                        <div id="cpu-load" class="cpu-load"></div>-->
                                        <canvas id="request_response"></canvas>

                                    </div>
                                </div>
                                <!-- /# card -->
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-7 col-md-7 col-sm12 system_info_card">
                        <div class="row">
                            <div class="col-3">
                                <div class="card" id="harddrive_card">
                                    <div class="stat-widget-two">
                                        <div class="stat-content">
                                            <div class="stat-text"><i class="fa-solid fa-hard-drive"></i> Hard Drive
                                            </div>
                                            <div class="stat-digit"> <%- DeviceInfo.SystemInformation.Disk.disks[0].Capacity %></div>
                                        </div>
                                        <div class="progress">
                                            <div class="progress-bar progress-bar-success "
                                                 style="width: <%- DeviceInfo.SystemInformation.Disk.disks[0].Capacity %>;"
                                                 role="progressbar" aria-valuenow="85" aria-valuemin="0"
                                                 aria-valuemax="100"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="card" id="ram_card">
                                    <div class="stat-widget-two">
                                        <div class="stat-content">
                                            <div class="stat-text"><i class="fa-solid fa-memory"></i> Memory</div>
                                            <div class="stat-digit"> 85</div>
                                        </div>
                                        <div class="progress">
                                            <div class="progress-bar progress-bar-success" role="progressbar"
                                                 aria-valuenow="85" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="card" id="system_time_card">
                                    <div class="stat-widget-two">
                                        <div class="stat-content">
                                            <div class="stat-text"><i class="fa-solid fa-gears"></i> System Time</div>
                                            <div class="stat-digit"> 350:12:15</div>
                                        </div>
                                        <div class="progress">
                                            <div class="progress-bar progress-bar-success" role="progressbar"
                                                 aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="card" id="process_time_card">
                                    <div class="stat-widget-two">
                                        <div class="stat-content">
                                            <div class="stat-text"><i class="fa-solid fa-user-gear"></i> Process Time
                                            </div>
                                            <div class="stat-digit"> 25:12:15</div>
                                        </div>
                                        <div class="progress">
                                            <div class="progress-bar progress-bar-success" role="progressbar"
                                                 aria-valuenow="25" aria-valuemin="0" aria-valuemax="60"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="card alert">
                                    <div class="card-title">
                                        <h4><i class="fa fa-area-chart"></i> CPU Load</h4>
                                    </div>
                                    <div class="cpu-load-chart">
                                        <!--                                        <div id="cpu-load" class="cpu-load"></div>-->
                                        <canvas id="cpu-load"></canvas>

                                    </div>
                                </div>
                                <!-- /# card -->
                            </div>
                            <!-- /# column -->
                        </div>
                        <div class="row justify-content-center" id="cpu_core_infos">


                        </div>

                    </div>
                </div>


                <div class="row" id="website_footer">
                    <div class="col-lg-12">
                        <div class="footer">
                            <p>2023 © Soft Sensors Lab. - <a href="https://softsensorslab.itu.edu.tr" target="_blank">softsensorslab.itu.edu.tr</a>
                            </p>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>


<%- include('./partials/footer') %>

<div id="loadingDiv" class="cssload-container">
    <div class="cssload-item cssload-ventilator"></div>
</div>

<%- include('./partials/scripts') %>

<script>
    $(window).resize(function () {
        var calc_height = $(window).height() - $('#website_footer').height() - $('#page_title').height() - $('#header_container').height()
        $("#chart_row").css('min-height', calc_height);
    });

    var calc_height = $(window).height() - $('#website_footer').height() - $('#page_title').height() - $('#header_container').height();
    $("#chart_row").css('min-height', calc_height);

</script>
<!--Script Area-->
<script>
    <% if(DeviceInfo.DeviceType == DeviceTypes.Cloud){ %>
    FogSidebar= function (socketId, deviceInfo){
        this.SocketId=socketId;
        this.DeviceInfo= deviceInfo;
        this.Initialize = function (){
            const div = `<li id="${this.SocketId}" class="fognode"><a class="sidebar-sub-toggle"><i class="ti-plug"></i> ${this.DeviceInfo.PublicIP} <span class="sidebar-collapse-icon ti-angle-down"></span></a>
                            <ul class="fogdevicelist">

                            </ul>
                        </li>`;
            if($('.fognode').length>0){
                $('.fognode').last().after(div);
            }else {
                $('#fognodelabel').after(div);
            }

        }

        this.AddDevice= function (socketId, deviceInfo, isBroker=false){
            const div = `<li><a href="ui-typography.html">${isBroker?"Broker":"Worker"}: ${deviceInfo.LocalIP}</a></li>`;
            $("#"+this.SocketId+" .fogdevicelist").append(div);
        }
    }

    <% } else if(DeviceInfo.DeviceType == DeviceTypes.Broker){ %>
        FogSidebar= function (socketId, deviceInfo){
            this.SocketId=socketId;
            this.DeviceInfo= deviceInfo;
            this.Initialize = function (){
                const div = `<li id="${this.SocketId}" class="fognode"><a  href="http://${this.DeviceInfo.LocalIP}:${this.DeviceInfo.Port}" target="_blank"><i class="ti-plug"></i> ${this.DeviceInfo.LocalIP}</a>

                            </li>`;
                if($('.fognode').length>0){
                    $('.fognode').last().after(div);
                }else {
                    $('#fognodelabel').after(div);
                }

            }
        }
    <% } %>

    ChartObject = function (canvasId, title, datasize = 102, labels = null) {
        this.canvasId = canvasId;
        this.title = title;
        this.datasize = datasize;
        this.labels = labels
        this.min_y = 0;
        this.max_y = 100;


        this.Initialize = function () {
            this.ctx = document.getElementById(this.canvasId);
            this.chart = new Chart(this.ctx, {
                type: 'line',
                data: {
                    labels: this.labels,
                    datasets: this.datasets
                },
                options: {
                    animation: {
                        duration: 400
                    },
                    responsive: true
                    ,
                    scales: {
                        x: {
                            mix: 0,
                            max: 100,
                            ticks: {
                                autoSkip: true,
                                maxTicksLimit: 21
                            }
                        },
                        y: {
                            max: 100,
                            min: 0,

                        }
                    }
                }
            });
        }

        this.createDataSet = function (dataset_titles) {
            if (!this.labels) {
                this.labels = [];
                for (let i = 0; i < this.datasize; i++) {
                    this.labels.push(i);
                }
            }
            this.datasets = dataset_titles.map(item => {
                return {
                    label: item,
                    data: [],
                    fill: false,
                    tension: 0.5
                }
            });
        }

        this.AddData = function (values) {
            values.forEach((item, index) => {
                const arr = this.datasets[index].data;
                arr.push(item);
                if (arr.length > this.datasize - 1) {
                    arr.shift();
                }
            });
            this.chart.update()
        }

        this.AddBulkData = function (values) {
            values.forEach((item, index) => {
                const arr = this.datasets[index].data;
                arr.push(...item);
                if (arr.length > this.datasize) {
                    this.datasets[index].data = arr.slice(arr.length - arr.datasize, arr.length);
                }
            });
            this.chart.update()
        }
    }
    CPULoad = new ChartObject('cpu-load', 'CPU Load');
    CPULoad.createDataSet(['CPU Utilization']);
    CPULoad.Initialize();

    RequestResponseChart = new ChartObject('request_response', 'Request / Response');
    RequestResponseChart.createDataSet(['Reqeust','Response']);
    RequestResponseChart.Initialize();


</script>
<% if(DeviceInfo.DeviceType != DeviceTypes.Worker){ %>
<script>
    FogChildren = <%- JSON.stringify(FogChildren) %>
    ReloadFogChildren= function () {
        $('.fognode').remove()
        if (Object.keys(FogChildren).length > 0) {
            for (const key in FogChildren) {
                const fogChild = FogChildren[key];
                let fogSideBar = new FogSidebar(key, fogChild.DeviceInfo);
                fogSideBar.Initialize();
                <%  if(DeviceInfo.DeviceType != DeviceTypes.Broker){ %>
                fogSideBar.AddDevice(key, fogChild.DeviceInfo, true);

                if (fogChild.Children) {
                    for (const key2 in fogChild.Children) {
                        fogSideBar.AddDevice(key2, fogChild.Children[key2].DeviceInfo, false);
                    }
                }
                <% }%>
            }
        } else {
            const div = `<li class="fognode"><a class="sidebar-sub-toggle"><i class="ti-plug"></i> No connected device found! </a>

                        </li>`;
            $('#fognodelabel').after(div);
        }
    }

    ReloadFogChildren();
</script>
<%}%>
<script>

    Core_CircleBars = []
    Update_Index = 0;
    socket = io('/', {
        query: {
            DeviceType: "<%= UserType %>",
            Directory: "<%= Directory %>"
        }
    });
    socket.on('connect', function () {
        console.log('connected');
        $('#connectionIcon').removeClass('disconnect').addClass('connect');
        $('#connectionIcon').data('content', 'Device is connected!').attr('data-content', 'Device connected');
        //socket.emit('control', new SocketCodes.InitialConfiguration([]));
    });
    //  socket = io('https://'+window.location.hostname+':'+window.location.port);
    // socket.on("device", function (data) {
    //     if (data) {
    //         $("#device").html("Connected");
    //     } else {
    //         $("#device").html("Disconnected");
    //     }
    // });

    socket.on('disconnect', function () {
        $('#connectionIcon').removeClass('connect').addClass('disconnect');
        $('#connectionIcon').data('content', 'Device is disconnected!').attr('data-content', 'Device is disconnected');

    });

    socket.on('resource_info', function (info) {
        //console.log(info);
        //CPU Load Graph
        CPULoad.AddData([info.cpu_percentage.total.usage]);
        RequestResponseChart.AddData([info.user_package_total.request, info.user_package_total.response]);
        Update_Index++;
        //CPU Core Infos
        if (Update_Index % 2 == 0) {
            for (let i = 0; i < info.cpu_percentage.cores.length; i++) {
                Core_CircleBars[i].Change(info.cpu_percentage.cores[i].usage / 100)
            }
        }
        //Process Time
        $('#process_time_card .stat-digit').html(SecondToTime(info.process_uptime))
        ChangeProgressBar('#process_time_card .progress-bar', (info.process_uptime % 60) / 60);

        //System Time
        $('#system_time_card .stat-digit').html(SecondToTime(info.system_uptime))
        ChangeProgressBar('#system_time_card .progress-bar', (info.system_uptime % 60) / 60);

        //Memory
        const memory_usage = parseInt(100 * (info.totalmem - info.freemem) / info.totalmem)
        $('#ram_card .stat-digit').html(memory_usage + '%')
        ChangeProgressBar('#ram_card .progress-bar', memory_usage/100);

        //circleprogress.Change(info.cpu_percentage.total.usage);
    });
    socket.on('bulk_data', function (data) {
        if(Core_CircleBars.length ==0) {
            for (let i = 0; i < data.cores.length; i++) {
                let circle_progress = new CPUCoreObject('cpu_core_infos', i + 1);
                circle_progress.initialize()
                circle_progress.Change(data.cores[i] / 100);
                Core_CircleBars.push(circle_progress);
            }
        }
        CPULoad.AddBulkData([data.cpu])
        RequestResponseChart.AddBulkData([data.request, data.response]);
    });

    socket.on('device_info', function (obj) {
        console.log(obj)
        FogChildren[obj.SocketId] = {DeviceInfo: obj.DeviceInfo}
        ReloadFogChildren()
    });

    socket.on('device_disconnected', function (obj){
        console.log("hgasd")
        if(FogChildren[obj.SocketId]){
            delete FogChildren[obj.SocketId];
        }
        ReloadFogChildren();
    });

    socket.on('worker_disconnected', function (obj){
        const child = FogChildren[obj.ParentId]
        if(child){
            if(child.Children[obj.SocketId]){
                delete child.Children[obj.SocketId]
            }
        }
        ReloadFogChildren();
    });

    socket.on('worker_device_info', function (obj) {
        const child = FogChildren[obj.ParentId]
        if(!child.Children){
            child.Children={}
        }
        child.Children[obj.SocketId] ={DeviceInfo : obj.DeviceInfo}
        ReloadFogChildren()
    });





</script>

<script>
    (function ($) {
        "use strict";

        socket.on("sensor", function (data) {
            //console.log(data)
            AddSensorsData(data);
        });


    }(jQuery));
</script>

<!--End Script Area-->

</body>

</html>
